version: '2'

services:

### Applications Code Container #############################

    applications:
      image: tianon/true
      volumes:
        - ${APPLICATION}:/var/www

### PHP-FPM Container #######################################

    php-fpm:
      build:
        context: ./php-fpm
        args:
          - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        dockerfile: "Dockerfile-${PHP_VERSION}"
      volumes_from:
        - applications
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      networks:
        - backend

### Nginx Server Container ##################################

    nginx:
      build:
        context: ./nginx
        args:
          - PHP_UPSTREAM=php-fpm
      volumes_from:
        - applications
      volumes:
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### MySQL Container #########################################

    mysql:
      build:
        context: ./mysql
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      volumes:
        - ${MYSQL_STORAGE_PATH}:/var/lib/mysql
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        - backend

### PostGre ############

    postgres:
        image: postgres
          # build:
          #   context: ./postgres
        ports:
            - "5432:5432"
        volumes:
            - ${POSTGRES_STORAGE_PATH}:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB_NAME}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

### Redis Container #########################################

    redis:
      build: ./redis
      volumes:
        - redis:/data
      ports:
        - "6379:6379"
      networks:
        - backend

### Memcached Container #####################################

    memcached:
      build: ./memcached
      volumes:
        - memcached:/var/lib/memcached
      ports:
        - "${MEMCACHED_HOST_PORT}:11211"
      networks:
        - backend

### RabbitMQ Container ######################################

    rabbitmq:
      build: ./rabbitmq
      ports:
        - "${RABBITMQ_NODE_HOST_PORT}:5672"
        - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
        - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
      privileged: true
      environment:
        - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      # depends_on:
      #   - php-fpm
      networks:
        - backend

### ElasticSearch Container #################################

    elasticsearch:
      build: ./elasticsearch
      volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data
        - elasticsearch-plugins:/usr/share/elasticsearch/plugins
      ports:
        - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
        - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
      depends_on:
        - php-fpm
      networks:
        - frontend

### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################

volumes:
  mysql:
    driver: "local"
  postgres:
    driver: "local"
  memcached:
    driver: "local"
  redis:
    driver: "local"
  elasticsearch-data:
    driver: "local"
  elasticsearch-plugins:
    driver: "local"
